# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'thesaurus.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import requests

class Ui_Thesaurus(object):
    def setupUi(self, Thesaurus):
        Thesaurus.setObjectName("Thesaurus")
        Thesaurus.resize(500, 500)
        Thesaurus.setStyleSheet("background-color: #7A6563;")
        self.centralwidget = QtWidgets.QWidget(Thesaurus)
        self.centralwidget.setObjectName("centralwidget")
        self.listWidget = QtWidgets.QListWidget(self.centralwidget)
        self.listWidget.setGeometry(QtCore.QRect(10, 50, 450, 450))
        self.listWidget.setStyleSheet("background-color: rgb(236, 226, 208);")
        self.listWidget.setObjectName("listWidget")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(10, 10, 220, 35))
        self.lineEdit.setStyleSheet("background-color: rgb(211, 165, 136);\n"
"\n"
"font: 11pt \"Sylfaen\";")
        self.lineEdit.setObjectName("LineEdit")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget, clicked=lambda: self.search())
        self.pushButton.setGeometry(QtCore.QRect(350, 10, 110, 35))
        self.pushButton.setStyleSheet("background-color: #ECE2D0;\n"
"font: 13pt \"Sylfaen\";\n"
"border-radius: 10px;\n"
"  min-height: 20px;\n"
"  min-width: 20px;")
        self.pushButton.setObjectName("pushButton")
        self.pushButton.setText("Search")
        Thesaurus.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(Thesaurus)
        self.statusbar.setObjectName("statusbar")
        Thesaurus.setStatusBar(self.statusbar)

        self.retranslateUi(Thesaurus)
        QtCore.QMetaObject.connectSlotsByName(Thesaurus)
        
    def search(self):
        selected_text = self.lineEdit.text()
        if (selected_text.isalpha() == False): 
            print("Please select a single word to find synonyms.")
            return
        api_url = f"https://api.api-ninjas.com/v1/thesaurus?word={selected_text}"
        api_key = "vtMKY8lbHyey9RkmywvuwA==6HtCnZBzFAwX8prJ"  # Replace with your actual API key

        response = requests.get(api_url, headers={'X-Api-Key': api_key})

        if response.status_code == 200:
            data = response.json()
            if "synonyms" in data and data["synonyms"] != []:
                self.listWidget.clear()
                self.listWidget.addItems(data["synonyms"])
                self.listWidget.itemClicked.connect(self.listWidget_currentItem)
               
                
            else:
                self.listWidget.clear()
                self.listWidget.addItem("No synonyms found for the word")
                
        else:
            print(f"Error: {response.status_code}, {response.text}")
    def listWidget_currentItem(self):
        row=self.listWidget.currentRow()
        print(self.listWidget.item(row).text())
        
    def retranslateUi(self, Thesaurus):
        _translate = QtCore.QCoreApplication.translate
        Thesaurus.setWindowTitle(_translate("Thesaurus", "Thesaurus"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Thesaurus = QtWidgets.QMainWindow()
    ui = Ui_Thesaurus()
    ui.setupUi(Thesaurus)
    Thesaurus.show()
    sys.exit(app.exec_())
